type: edu
custom_name: stage4
files:
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import *
    from hstest.test_case import TestCase

    CheckResult.correct = lambda: CheckResult(True, '')
    CheckResult.wrong = lambda feedback: CheckResult(False, feedback)


    class CalcTest(StageTest):
        def generate(self) -> List[TestCase]:
            cases = {"100 + 200 - 300\n/exit": "0\nBye!",
                     "4 + 6 - 8\n2 - 3 - 4\n/exit": "2\n-5\nBye!",
                     "8\n\n-2 + 4 - 5 + 6\n9 +++ 10 -- 8\n3 --- 5\n14     -  12\n/exit": "8\n3\n27\n-2\n2\nBye!"}
            return [TestCase(stdin=case,
                             attach=cases[case])
                    for case in cases]

        def check(self, reply: str, attach) -> CheckResult:
            return CheckResult(reply.strip() == attach.strip(), "")


    if __name__ == '__main__':
        CalcTest("calculator.calculator").run_tests()
  learner_created: false
- name: calculator/calculator.py
  visible: true
  text: |
    i = input()
    while i != "/exit":
        if i == "/help":
            print("The program calculates the sum of numbers")
        elif i:
            print(sum(int(x) for x in i.split()))
        i = input()
    print("Bye!")
  learner_created: true
feedback_link: https://hyperskill.org/projects/74/stages/412/implement
status: Solved
record: 4
